# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
 
name: Python application
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_run:
    workflows: ["Raspberry Pi Build Light"]  
    types:
      - requested

permissions:
  contents: read
 
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Set Workflow Status
        id: workflow-status
        run: |
          status=$(curl -s -X GET \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}" | jq -r '.status')

          echo "::set-output name=status::$status"
      - name: Send Webhook
        if: always()  # Ensure this step runs even if previous steps fail.
        run: |
         while true; do
           sleep 5
           curl -X POST \
             -H "Content-Type: application/json" \
             -d "{\"status\": \"${{ steps.workflow-status.outputs.status }}\"}" \
            https://6986-165-73-110-60.ngrok-free.app/webhook
         done


